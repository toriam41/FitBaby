import {View, Text, StyleSheet, FlatList, SectionList, Dimensions, Button, Pressable, Alert } from 'react-native';
import { ActivityIndicator } from 'react-native';
import React, {useState, useEffect} from 'react'
import {handleDeleteExercise} from '../RoutineScreen/RoutineScreen';
import { TouchableOpacity } from 'react-native-gesture-handler';

const fetchExerciseCards = (category) => {
    
  // exercise data from API
  const [exerciseData, setExerciseData] = useState([]);

  async function fec() {
    // API call needs to handle load time but works
    const options = {
      method: 'GET',
      headers: {
        'X-RapidAPI-Key': '4b348e1878mshc15d211c5f760aap1b7789jsn325a310c1c8c',
        'X-RapidAPI-Host': 'exercises-by-api-ninjas.p.rapidapi.com',
      },
    };
    const url = `https://exercises-by-api-ninjas.p.rapidapi.com/v1/exercises?type=${category}`;
    let controller = new AbortController();
    let exercises;

    await fetch(url, options)
    .then(response => response.json())
    .then((data) => setExerciseData(data))
    .catch((err) => {
        console.error(err)
    })
  }

  useEffect(() => {
    fec();
    exerciseData.sort((a, b) => a.name.localeCompare(b.name));
  }, [])

  return exerciseData;

}

async function displayCards(category) {
  const cards = await fetchExerciseCards(category)
  cards.sort((a, b) => a.name.localeCompare(b.name));
  return cards;
}

const types = [
  'cardio',
  'strength',
  'stretching',
  'olympic_weightlifting',
  'plyometrics',
  'powerlifting',
  'strongman',
];

const heading = (name) => {
  if (name === "olympic_weightlifting") {
    name = "Olympic Weightlifting"
  }
  else {
    name = name.charAt(0).toUpperCase() + name.slice(1);
  }

  return name;
}

const exercises = Symbol('exercises');

class Category {
  constructor(type, key) {
    this.title = heading(type)
    this.key = key

    switch (type) {
      case 'cardio': 
        this.theme = "#FBC688";
        break;
      case 'strength':
        this.theme = "#CCD5AE";
        break;
      case 'stretching':
        this.theme = "#86BBD8";
        break;
      case 'olympic_weightlifting':
        this.theme = "#F6D36C";
        break;
      case 'plyometrics':
        this.theme = "#85998A";
        break;
      case 'powerlifting':
        this.theme = "#D4A373";
        break;
      case 'strongman': 
        this.theme = "#FBC688";
        break;
      default : "#000000"
    }
   
    // this[exercises] = fetchExerciseCards(type)

     
    
    this.data = this.getExercises()
  }
  // setters n getter to return stored object data
  getExercises() {
    return this[exercises];
  }
}


const ExercisesScreen = ({navigation}) => {
  // new array of categories
  const categories = [];
  let i = 1;
  

  types.forEach((category) => {
    const item = new Category(category, i);
    console.log(category + " created!\n")

    console.log(JSON.stringify(item) + '\n')

    categories.push(item)
    i++
  }); 
//  
  return (
    console.log(JSON.stringify(categories) + '\n')
  

   /*  <>
      <Text>Discover</Text>
      <SectionList
      contentContainerStyle={{ paddingHorizontal: 10 }}
        stickySectionHeadersEnabled={false}
        sections={}
         // should return array of all categories as objects
        renderSectionHeader={({ section }) => {
          return(
            <>
              <Text style={styles.sectionHeader}>{section.title}</Text>  
              <FlatList
                data={section.data}
                renderItem={({ item }) => {
                  return (
                    // need touchable opacity to click and display card info
                      <ListItem item={item} theme={section.theme}/>
                  )
                }}
                horizontal={true}
              />
            </>
          )
        }}
        renderItem={({ item }) => {
          return null;
        }}
      />
   </> */
  );
};


const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginTop: 25,
    marginBottom: 25, 
  },
  item: {
    alignItems: 'center',
    justifyContent: 'center',
    flex: 1,
    marginRight: 15,
    height: 90,
    width: 250,
    borderRadius: 10,
  },  
  itemText: {
    color: '#fff',
  },
  exerciseData: {
    backgroundColor: '#f2f2f2',
    padding: 10,
    marginVertical: 8,
    marginHorizontal: 16,
  },
})

export default ExercisesScreen;
